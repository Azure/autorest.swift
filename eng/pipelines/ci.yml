jobs:
  - job: CI

    variables:
      - template: ../variables/globals.yml

    pool:
      vmImage: '$(OSVmImage)'

    steps:
      - script: sudo xcode-select --switch /Applications/Xcode_$(XcodeVersion).app
        displayName: 'Use Xcode $(XcodeVersion)'

      - script: npm install
        displayName: "Build"

      - script: npm run buildChat
        displayName: Generate Chat SDK and build

      - script: npm run test
        displayName: "Run Tests"

      - script: |
          npm run coverage-push -- $(Build.Repository.Name) $(Build.SourceBranch) $(github-token) $(storage-coverage-user) $(storage-coverage-pass)
        workingDirectory: node_modules/@microsoft.azure/autorest.testserver
        condition: and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['System.TeamProject'], 'internal'))
        displayName: "Upload Coverage Report"
