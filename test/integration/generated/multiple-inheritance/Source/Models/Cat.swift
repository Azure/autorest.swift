// --------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// --------------------------------------------------------------------------

import AzureCore
import Foundation
// swiftlint:disable superfluous_disable_command
// swiftlint:disable identifier_name
// swiftlint:disable line_length
// swiftlint:disable cyclomatic_complexity

public struct Cat: Codable {
    // MARK: Properties

    public let likesMilk: Bool?

    public let name: String

    public let meows: Bool?

    public let hisses: Bool?

    // MARK: Initializers

    /// Initialize a `Cat` structure.
    /// - Parameters:
    ///   - likesMilk:
    ///   - name:
    ///   - meows:
    ///   - hisses:
    public init(
        likesMilk: Bool? = nil, name: String, meows: Bool? = nil, hisses: Bool? = nil
    ) {
        self.likesMilk = likesMilk
        self.name = name
        self.meows = meows
        self.hisses = hisses
    }

    // MARK: Codable

    enum CodingKeys: String, CodingKey {
        case likesMilk
        case name
        case meows
        case hisses
    }

    /// Initialize a `Cat` structure from decoder
    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        self.likesMilk = try? container.decode(Bool.self, forKey: .likesMilk)
        self.name = try container.decode(String.self, forKey: .name)
        self.meows = try? container.decode(Bool.self, forKey: .meows)
        self.hisses = try? container.decode(Bool.self, forKey: .hisses)
    }

    /// Encode a `Cat` structure
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        if likesMilk != nil { try? container.encode(likesMilk, forKey: .likesMilk) }
        try container.encode(name, forKey: .name)
        if meows != nil { try? container.encode(meows, forKey: .meows) }
        if hisses != nil { try? container.encode(hisses, forKey: .hisses) }
    }
}
