// --------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// --------------------------------------------------------------------------

import AzureCore
import Foundation
// swiftlint:disable superfluous_disable_command
// swiftlint:disable identifier_name
// swiftlint:disable line_length
// swiftlint:disable cyclomatic_complexity

public struct OdataProductResult: Codable, Equatable {
    // MARK: Properties

    public let values: [Product]?

    public let odataNextLink: String?

    // MARK: Initializers

    /// Initialize a `OdataProductResult` structure.
    /// - Parameters:
    ///   - values:
    ///   - odataNextLink:
    public init(
        values: [Product]? = nil, odataNextLink: String? = nil
    ) {
        self.values = values
        self.odataNextLink = odataNextLink
    }

    // MARK: Codable

    enum CodingKeys: String, CodingKey {
        case values = "values"
        case odataNextLink = "odata.nextLink"
    }

    /// Initialize a `OdataProductResult` structure from decoder
    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        self.values = try? container.decode([Product].self, forKey: .values)
        self.odataNextLink = try? container.decode(String.self, forKey: .odataNextLink)
    }

    /// Encode a `OdataProductResult` structure
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        if values != nil { try? container.encode(values, forKey: .values) }
        if odataNextLink != nil { try? container.encode(odataNextLink, forKey: .odataNextLink) }
    }
}
