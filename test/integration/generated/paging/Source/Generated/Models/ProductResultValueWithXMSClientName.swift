// --------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// --------------------------------------------------------------------------

import AzureCore
import Foundation
// swiftlint:disable superfluous_disable_command
// swiftlint:disable identifier_name
// swiftlint:disable line_length
// swiftlint:disable cyclomatic_complexity

public struct ProductResultValueWithXMSClientName: Codable, Equatable {
    // MARK: Properties

    public let indexes: [Product]?

    public let nextLink: String?

    // MARK: Initializers

    /// Initialize a `ProductResultValueWithXMSClientName` structure.
    /// - Parameters:
    ///   - indexes:
    ///   - nextLink:
    public init(
        indexes: [Product]? = nil, nextLink: String? = nil
    ) {
        self.indexes = indexes
        self.nextLink = nextLink
    }

    // MARK: Codable

    enum CodingKeys: String, CodingKey {
        case indexes = "values"
        case nextLink = "nextLink"
    }

    /// Initialize a `ProductResultValueWithXMSClientName` structure from decoder
    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        self.indexes = try? container.decode([Product].self, forKey: .indexes)
        self.nextLink = try? container.decode(String.self, forKey: .nextLink)
    }

    /// Encode a `ProductResultValueWithXMSClientName` structure
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        if indexes != nil { try? container.encode(indexes, forKey: .indexes) }
        if nextLink != nil { try? container.encode(nextLink, forKey: .nextLink) }
    }
}
