// --------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// --------------------------------------------------------------------------

import AzureCore
import Foundation
// swiftlint:disable superfluous_disable_command
// swiftlint:disable identifier_name
// swiftlint:disable line_length
// swiftlint:disable cyclomatic_complexity

struct Property: Codable {
    public let value: String?

    enum CodingKeys: String, CodingKey {
        case value = "value"
    }

    public init(
        value: String? = nil
    ) {
        self.value = value
    }
}

/// The wrapped produc.
public struct ProductWrapper: Codable {
    // MARK: Properties

    internal let property: Property?
    public var value: String? {
        return property?.value
    }

    // MARK: Initializers

    /// Initialize a `ProductWrapper` structure.
    /// - Parameters:
    public init(
        value: String? = nil
    ) {
        self.property = Property(
            value: value
        )
    }

    // MARK: Codable

    enum CodingKeys: String, CodingKey {
        case property
    }

    /// Initialize a `ProductWrapper` structure from decoder
    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        self.property = try? container.decode(Property.self, forKey: .property)
    }

    /// Encode a `ProductWrapper` structure
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        if property != nil { try container.encode(property, forKey: .property) }
    }
}
