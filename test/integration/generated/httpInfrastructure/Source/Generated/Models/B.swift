// --------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// --------------------------------------------------------------------------

import AzureCore
import Foundation
// swiftlint:disable superfluous_disable_command
// swiftlint:disable identifier_name
// swiftlint:disable line_length
// swiftlint:disable cyclomatic_complexity

public struct B: Codable, Equatable {
    // MARK: Properties

    public let textStatusCode: String?

    public let statusCode: String?

    // MARK: Initializers

    /// Initialize a `B` structure.
    /// - Parameters:
    ///   - textStatusCode:
    ///   - statusCode:
    public init(
        textStatusCode: String? = nil, statusCode: String? = nil
    ) {
        self.textStatusCode = textStatusCode
        self.statusCode = statusCode
    }

    // MARK: Codable

    enum CodingKeys: String, CodingKey {
        case textStatusCode = "textStatusCode"
        case statusCode = "statusCode"
    }

    /// Initialize a `B` structure from decoder
    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        self.textStatusCode = try? container.decode(String.self, forKey: .textStatusCode)
        self.statusCode = try? container.decode(String.self, forKey: .statusCode)
    }

    /// Encode a `B` structure
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        if textStatusCode != nil { try? container.encode(textStatusCode, forKey: .textStatusCode) }
        if statusCode != nil { try? container.encode(statusCode, forKey: .statusCode) }
    }
}
