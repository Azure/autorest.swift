{% for exception in op.exceptions %}
    {% if exception.statusCodes.count > 0 %}
    if [
    {% for statusCode in exception.statusCodes %}
      {{ statusCode }},
    {% endfor  %}
    ].contains(statusCode)
    {
        do {
            let decoder = JSONDecoder()
            let decoded = try decoder.decode({{ exception.objectType }}.self, from: data)
            DispatchQueue.main.async {
                completionHandler(.failure(AzureError.service("{{ exception.description }}", decoded)), httpResponse)
            }
        } catch {
            DispatchQueue.main.async {
                completionHandler(.failure(AzureError.sdk("Decoding error.", error)), httpResponse)
            }
        }
    }
    {% endif %}
{% endfor %}
