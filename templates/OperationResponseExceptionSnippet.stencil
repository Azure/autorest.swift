{% for exception in op.exceptions %}
    if [
    {% for statusCode in exception.statusCodes %}
      {{ statusCode }},
    {% endfor  %}
    ].contains(statusCode)
    {
        do {
            {% if exception.strategy == "intBody" %}
                {% include "OperationResponseExceptionIntBodySnippet.stencil" %}
            {% elif exception.strategy == "stringBody" %}
                {% include "OperationResponseExceptionStringBodySnippet.stencil" %}
            {% elif exception.strategy == "jsonBody" %}
                {% include "OperationResponseExceptionJsonBodySnippet.stencil" %}
            {% else %}
                // TODO: Couldn't find template for {{ exception.strategy }}
            {% endif %}
            dispatchQueue.async {
                completionHandler(.failure(AzureError.service("{{ exception.description }}", decoded)), httpResponse)
            }
        } catch {
            dispatchQueue.async {
                completionHandler(.failure(AzureError.sdk("Decoding error.", error)), httpResponse)
            }
        }
    }
{% endfor %}
