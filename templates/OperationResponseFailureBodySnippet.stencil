guard let data = httpResponse?.data else {
    let noDataError = AzureError.sdk("Response data expected but not found.")
    dispatchQueue.async {
        completionHandler(.failure(noDataError), httpResponse)
    }
    return
}
do {
    let decoder = JSONDecoder()
    let decoded = try decoder.decode({{ op.defaultException.objectType }}.self, from: data)
    dispatchQueue.async {
        completionHandler(.failure(AzureError.service("{{ op.defaultException.description }}", decoded)), httpResponse)
    }
} catch {
     dispatchQueue.async {
        completionHandler(.failure(AzureError.sdk("Decoding error.", error)), httpResponse)
    }
}
