{% include "HeaderSnippet.stencil" %}

{% include "ImportSnippet.stencil" %}
// swiftlint:disable superfluous_disable_command
// swiftlint:disable file_length
// swiftlint:disable cyclomatic_complexity
// swiftlint:disable function_body_length
// swiftlint:disable type_body_length

{{ group.comment }}
public final class {{ group.name }} {

    public let client: {{ model.name }}
    
    public let commonOptions: ClientOptions

    /// Options provided to configure this `{{ model.name }}`.
    public let options: {{ model.name }}Options

    init(client: {{ model.name }}) {
        self.client = client
        self.options = client.options
        self.commonOptions = client.commonOptions
    }

    public func url(
        host hostIn: String? = nil,
        template templateIn: String,
        pathParams pathParamsIn: [String: String]? = nil,
        queryParams queryParamsIn: [QueryParameter]? = nil
    ) -> URL? {
        return client.url(host: hostIn, template: templateIn, pathParams: pathParamsIn, queryParams: queryParamsIn)
    }
    
    public func request(_ request: HTTPRequest, context: PipelineContext?, completionHandler: @escaping HTTPResultHandler<Data?>) {
        return client.request(request, context: context, completionHandler: completionHandler)
    }

    {% for op in group.operations %}
        {% include "OperationSnippet.stencil" op %}
    {% endfor %}
}
