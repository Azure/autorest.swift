/// Create a {{ model.name }} client.
/// - Parameters:
///   - authPolicy: An `Authenticating` policy to use for authenticating client requests.
///   - options: Options used to configure the client.
public convenience init(
{% for param in model.globalParameters %}
{% if param.optional == false %}
    {{ param.name }} : {{ param.type }},
{% endif %}
{% endfor %}
    authPolicy: Authenticating,
    withOptions options: {{ model.name }}Options
) throws {
    guard let baseUrl = URL(string: {{ model.host }}) else {
        fatalError("Unable to form base URL")
    }
    try self.init(
    {% for param in model.globalParameters %}
    {% if param.optional == false %}
    {{ param.name }} : {{ param.name }},
    {% endif %}
    {% endfor %}
    baseUrl: baseUrl,
    authPolicy: authPolicy,
    withOptions: options)
}
