{% include "OperationResponseNullableBodySnippet.stencil" %}
do {
    let decoder = JSONDecoder()
    {% if response.strategy == "dateTimeBody" %}
        let dateFormatter = Date.AzureISO8601DateFormatter()
        decoder.dateDecodingStrategy = .formatted(dateFormatter)
    {% elif response.strategy == "dateTimeRfc1123Body" %}
        let dateFormatter = Date.AzureRfc1123DateFormatter()
        decoder.dateDecodingStrategy = .formatted(dateFormatter)
    {% elif response.strategy == "dateBody" %}
        let dateFormatter = DateFormatter()
        dateFormatter.dateFormat = "yyyy-MM-dd"
        decoder.dateDecodingStrategy = .formatted(dateFormatter)
    {% elif response.strategy == "timeBody" %}
        let dateFormatter = DateFormatter()
        dateFormatter.dateFormat = "HH:mm:ss"
        decoder.dateDecodingStrategy = .formatted(dateFormatter)
    {% endif %}
    let decoded = try decoder.decode({{ response.objectType }}.self, from: data)
    dispatchQueue.async {
        completionHandler(.success(decoded), httpResponse)
    }
} catch {
    dispatchQueue.async {
        completionHandler(.failure(AzureError.client("Decoding error.", error)), httpResponse)
    }
}
